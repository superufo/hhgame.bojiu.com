// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: proto/pb_game_2_hong_hei.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//进入游戏
type MGame_2EnterGameTos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId *int32 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3,oneof" json:"game_id,omitempty"` //0大厅1龙虎2红黑百家乐
	Room   *int32 `protobuf:"varint,2,opt,name=room,proto3,oneof" json:"room,omitempty"`                   //房间
	Desk   *int32 `protobuf:"varint,3,opt,name=desk,proto3,oneof" json:"desk,omitempty"`                   //桌子
}

func (x *MGame_2EnterGameTos) Reset() {
	*x = MGame_2EnterGameTos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MGame_2EnterGameTos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MGame_2EnterGameTos) ProtoMessage() {}

func (x *MGame_2EnterGameTos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MGame_2EnterGameTos.ProtoReflect.Descriptor instead.
func (*MGame_2EnterGameTos) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{0}
}

func (x *MGame_2EnterGameTos) GetGameId() int32 {
	if x != nil && x.GameId != nil {
		return *x.GameId
	}
	return 0
}

func (x *MGame_2EnterGameTos) GetRoom() int32 {
	if x != nil && x.Room != nil {
		return *x.Room
	}
	return 0
}

func (x *MGame_2EnterGameTos) GetDesk() int32 {
	if x != nil && x.Desk != nil {
		return *x.Desk
	}
	return 0
}

type MGame_2EnterGameToc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId   *int32                    `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3,oneof" json:"game_id,omitempty"` //0大厅1龙虎2红黑百家乐
	Room     *int32                    `protobuf:"varint,2,opt,name=room,proto3,oneof" json:"room,omitempty"`                   //普通房间就是房间ID
	Desk     *int32                    `protobuf:"varint,3,opt,name=desk,proto3,oneof" json:"desk,omitempty"`                   //桌子
	Sessions []*PGameHongHei_2Sessions `protobuf:"bytes,4,rep,name=sessions,proto3" json:"sessions,omitempty"`                  // 场次 1平民  2小资  3老板  4土豪 后期后台配置
}

func (x *MGame_2EnterGameToc) Reset() {
	*x = MGame_2EnterGameToc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MGame_2EnterGameToc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MGame_2EnterGameToc) ProtoMessage() {}

func (x *MGame_2EnterGameToc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MGame_2EnterGameToc.ProtoReflect.Descriptor instead.
func (*MGame_2EnterGameToc) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{1}
}

func (x *MGame_2EnterGameToc) GetGameId() int32 {
	if x != nil && x.GameId != nil {
		return *x.GameId
	}
	return 0
}

func (x *MGame_2EnterGameToc) GetRoom() int32 {
	if x != nil && x.Room != nil {
		return *x.Room
	}
	return 0
}

func (x *MGame_2EnterGameToc) GetDesk() int32 {
	if x != nil && x.Desk != nil {
		return *x.Desk
	}
	return 0
}

func (x *MGame_2EnterGameToc) GetSessions() []*PGameHongHei_2Sessions {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type PGameHongHei_2Sessions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinBet      *int64 `protobuf:"varint,1,opt,name=min_bet,json=minBet,proto3,oneof" json:"min_bet,omitempty"`                  // 最小投注金额   // TODO 后台配置
	MaxBet      *int64 `protobuf:"varint,2,opt,name=max_bet,json=maxBet,proto3,oneof" json:"max_bet,omitempty"`                  // 最大投注金额
	MinBetLucky *int64 `protobuf:"varint,3,opt,name=min_bet_lucky,json=minBetLucky,proto3,oneof" json:"min_bet_lucky,omitempty"` // 幸运一击最小投注金额
	MaxBetLucky *int64 `protobuf:"varint,4,opt,name=max_bet_lucky,json=maxBetLucky,proto3,oneof" json:"max_bet_lucky,omitempty"` // 幸运一击最大投注金额
}

func (x *PGameHongHei_2Sessions) Reset() {
	*x = PGameHongHei_2Sessions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PGameHongHei_2Sessions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PGameHongHei_2Sessions) ProtoMessage() {}

func (x *PGameHongHei_2Sessions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PGameHongHei_2Sessions.ProtoReflect.Descriptor instead.
func (*PGameHongHei_2Sessions) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{2}
}

func (x *PGameHongHei_2Sessions) GetMinBet() int64 {
	if x != nil && x.MinBet != nil {
		return *x.MinBet
	}
	return 0
}

func (x *PGameHongHei_2Sessions) GetMaxBet() int64 {
	if x != nil && x.MaxBet != nil {
		return *x.MaxBet
	}
	return 0
}

func (x *PGameHongHei_2Sessions) GetMinBetLucky() int64 {
	if x != nil && x.MinBetLucky != nil {
		return *x.MinBetLucky
	}
	return 0
}

func (x *PGameHongHei_2Sessions) GetMaxBetLucky() int64 {
	if x != nil && x.MaxBetLucky != nil {
		return *x.MaxBetLucky
	}
	return 0
}

// 玩家选择场次  C--> S
type MPlayerIntoGameHongHei_2Tos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SId      *string `protobuf:"bytes,1,opt,name=s_id,json=sId,proto3,oneof" json:"s_id,omitempty"` // 玩家Id
	Sessions *int32  `protobuf:"varint,2,opt,name=sessions,proto3,oneof" json:"sessions,omitempty"` // 场次 1平民  2小资  3老板  4土豪
}

func (x *MPlayerIntoGameHongHei_2Tos) Reset() {
	*x = MPlayerIntoGameHongHei_2Tos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MPlayerIntoGameHongHei_2Tos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MPlayerIntoGameHongHei_2Tos) ProtoMessage() {}

func (x *MPlayerIntoGameHongHei_2Tos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MPlayerIntoGameHongHei_2Tos.ProtoReflect.Descriptor instead.
func (*MPlayerIntoGameHongHei_2Tos) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{3}
}

func (x *MPlayerIntoGameHongHei_2Tos) GetSId() string {
	if x != nil && x.SId != nil {
		return *x.SId
	}
	return ""
}

func (x *MPlayerIntoGameHongHei_2Tos) GetSessions() int32 {
	if x != nil && x.Sessions != nil {
		return *x.Sessions
	}
	return 0
}

// 进入场次返回所有桌子的信息  S--> C
type MAllDeskHongHei_2InfoToc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SId      *string                  `protobuf:"bytes,1,opt,name=s_id,json=sId,proto3,oneof" json:"s_id,omitempty"` // 玩家id
	Nickname *string                  `protobuf:"bytes,2,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`  // 玩家名称
	Coin     *int64                   `protobuf:"varint,3,opt,name=coin,proto3,oneof" json:"coin,omitempty"`         // 金币
	Desk     []*PAllDeskHongHei_2Info `protobuf:"bytes,4,rep,name=desk,proto3" json:"desk,omitempty"`                // 所有桌子信息
}

func (x *MAllDeskHongHei_2InfoToc) Reset() {
	*x = MAllDeskHongHei_2InfoToc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MAllDeskHongHei_2InfoToc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MAllDeskHongHei_2InfoToc) ProtoMessage() {}

func (x *MAllDeskHongHei_2InfoToc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MAllDeskHongHei_2InfoToc.ProtoReflect.Descriptor instead.
func (*MAllDeskHongHei_2InfoToc) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{4}
}

func (x *MAllDeskHongHei_2InfoToc) GetSId() string {
	if x != nil && x.SId != nil {
		return *x.SId
	}
	return ""
}

func (x *MAllDeskHongHei_2InfoToc) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *MAllDeskHongHei_2InfoToc) GetCoin() int64 {
	if x != nil && x.Coin != nil {
		return *x.Coin
	}
	return 0
}

func (x *MAllDeskHongHei_2InfoToc) GetDesk() []*PAllDeskHongHei_2Info {
	if x != nil {
		return x.Desk
	}
	return nil
}

// 当前场次内所有牌桌的信息
type PAllDeskHongHei_2Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeskId   *int32 `protobuf:"varint,1,opt,name=desk_id,json=deskId,proto3,oneof" json:"desk_id,omitempty"`       // 桌子Id
	Status   *int32 `protobuf:"varint,2,opt,name=status,proto3,oneof" json:"status,omitempty"`                     // 当前桌子的状态  1未下注  2下注中  3开牌中  4结算中
	NextTime *int32 `protobuf:"varint,3,opt,name=next_time,json=nextTime,proto3,oneof" json:"next_time,omitempty"` // 下次状态变化的时间
	Set      *int32 `protobuf:"varint,4,opt,name=set,proto3,oneof" json:"set,omitempty"`                           // 进行到第几局
}

func (x *PAllDeskHongHei_2Info) Reset() {
	*x = PAllDeskHongHei_2Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PAllDeskHongHei_2Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PAllDeskHongHei_2Info) ProtoMessage() {}

func (x *PAllDeskHongHei_2Info) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PAllDeskHongHei_2Info.ProtoReflect.Descriptor instead.
func (*PAllDeskHongHei_2Info) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{5}
}

func (x *PAllDeskHongHei_2Info) GetDeskId() int32 {
	if x != nil && x.DeskId != nil {
		return *x.DeskId
	}
	return 0
}

func (x *PAllDeskHongHei_2Info) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *PAllDeskHongHei_2Info) GetNextTime() int32 {
	if x != nil && x.NextTime != nil {
		return *x.NextTime
	}
	return 0
}

func (x *PAllDeskHongHei_2Info) GetSet() int32 {
	if x != nil && x.Set != nil {
		return *x.Set
	}
	return 0
}

// 游戏服主动推送状态的改变
type MDeskStatusChangeToc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeskId     *int32       `protobuf:"varint,1,opt,name=desk_id,json=deskId,proto3,oneof" json:"desk_id,omitempty"`             // 桌子Id
	NextStatus *int32       `protobuf:"varint,2,opt,name=next_status,json=nextStatus,proto3,oneof" json:"next_status,omitempty"` // 即将到来的状态
	Time       *int32       `protobuf:"varint,3,opt,name=time,proto3,oneof" json:"time,omitempty"`                               // 状态持续时间
	Rbet       []*PRobotBet `protobuf:"bytes,4,rep,name=rbet,proto3" json:"rbet,omitempty"`                                      // 机器人下注
}

func (x *MDeskStatusChangeToc) Reset() {
	*x = MDeskStatusChangeToc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MDeskStatusChangeToc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MDeskStatusChangeToc) ProtoMessage() {}

func (x *MDeskStatusChangeToc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MDeskStatusChangeToc.ProtoReflect.Descriptor instead.
func (*MDeskStatusChangeToc) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{6}
}

func (x *MDeskStatusChangeToc) GetDeskId() int32 {
	if x != nil && x.DeskId != nil {
		return *x.DeskId
	}
	return 0
}

func (x *MDeskStatusChangeToc) GetNextStatus() int32 {
	if x != nil && x.NextStatus != nil {
		return *x.NextStatus
	}
	return 0
}

func (x *MDeskStatusChangeToc) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *MDeskStatusChangeToc) GetRbet() []*PRobotBet {
	if x != nil {
		return x.Rbet
	}
	return nil
}

// 机器人下注
type PRobotBet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area *int32 `protobuf:"varint,1,opt,name=area,proto3,oneof" json:"area,omitempty"` // 区域
	Nums *int64 `protobuf:"varint,2,opt,name=nums,proto3,oneof" json:"nums,omitempty"` // 数量
}

func (x *PRobotBet) Reset() {
	*x = PRobotBet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PRobotBet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PRobotBet) ProtoMessage() {}

func (x *PRobotBet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PRobotBet.ProtoReflect.Descriptor instead.
func (*PRobotBet) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{7}
}

func (x *PRobotBet) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *PRobotBet) GetNums() int64 {
	if x != nil && x.Nums != nil {
		return *x.Nums
	}
	return 0
}

// 玩家进入桌子 C-->S
type MPlayerIntoDeskHongHei_2Tos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SId       *string `protobuf:"bytes,1,opt,name=s_id,json=sId,proto3,oneof" json:"s_id,omitempty"`                    // 玩家id
	SessionId *int32  `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3,oneof" json:"session_id,omitempty"` // 场次Id
	DeskId    *int32  `protobuf:"varint,3,opt,name=desk_id,json=deskId,proto3,oneof" json:"desk_id,omitempty"`          // 桌子号
}

func (x *MPlayerIntoDeskHongHei_2Tos) Reset() {
	*x = MPlayerIntoDeskHongHei_2Tos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MPlayerIntoDeskHongHei_2Tos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MPlayerIntoDeskHongHei_2Tos) ProtoMessage() {}

func (x *MPlayerIntoDeskHongHei_2Tos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MPlayerIntoDeskHongHei_2Tos.ProtoReflect.Descriptor instead.
func (*MPlayerIntoDeskHongHei_2Tos) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{8}
}

func (x *MPlayerIntoDeskHongHei_2Tos) GetSId() string {
	if x != nil && x.SId != nil {
		return *x.SId
	}
	return ""
}

func (x *MPlayerIntoDeskHongHei_2Tos) GetSessionId() int32 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *MPlayerIntoDeskHongHei_2Tos) GetDeskId() int32 {
	if x != nil && x.DeskId != nil {
		return *x.DeskId
	}
	return 0
}

// 返回当前桌子信息  S--> C
type MDeskInfoToc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SId      *string                      `protobuf:"bytes,1,opt,name=s_id,json=sId,proto3,oneof" json:"s_id,omitempty"`                 // 玩家id
	Coin     *int64                       `protobuf:"varint,2,opt,name=coin,proto3,oneof" json:"coin,omitempty"`                         // 我的金币
	Status   *int32                       `protobuf:"varint,3,opt,name=status,proto3,oneof" json:"status,omitempty"`                     // 当前桌子的状态
	NextTime *int32                       `protobuf:"varint,4,opt,name=next_time,json=nextTime,proto3,oneof" json:"next_time,omitempty"` // 下一个状态变化的时间
	Set      *int32                       `protobuf:"varint,5,opt,name=set,proto3,oneof" json:"set,omitempty"`                           // 第几局
	History  []*PDeskInfoHongHei_2History `protobuf:"bytes,6,rep,name=history,proto3" json:"history,omitempty"`                          // 当前桌子的输赢记录  保留n条
	BetArea  []*PDeskBetHongHei_2Area     `protobuf:"bytes,7,rep,name=bet_area,json=betArea,proto3" json:"bet_area,omitempty"`           // 投注区域信息
	MyBet    []*PDeskMyBetHongHei_2Info   `protobuf:"bytes,8,rep,name=my_bet,json=myBet,proto3" json:"my_bet,omitempty"`                 // 我的投注信息
}

func (x *MDeskInfoToc) Reset() {
	*x = MDeskInfoToc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MDeskInfoToc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MDeskInfoToc) ProtoMessage() {}

func (x *MDeskInfoToc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MDeskInfoToc.ProtoReflect.Descriptor instead.
func (*MDeskInfoToc) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{9}
}

func (x *MDeskInfoToc) GetSId() string {
	if x != nil && x.SId != nil {
		return *x.SId
	}
	return ""
}

func (x *MDeskInfoToc) GetCoin() int64 {
	if x != nil && x.Coin != nil {
		return *x.Coin
	}
	return 0
}

func (x *MDeskInfoToc) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *MDeskInfoToc) GetNextTime() int32 {
	if x != nil && x.NextTime != nil {
		return *x.NextTime
	}
	return 0
}

func (x *MDeskInfoToc) GetSet() int32 {
	if x != nil && x.Set != nil {
		return *x.Set
	}
	return 0
}

func (x *MDeskInfoToc) GetHistory() []*PDeskInfoHongHei_2History {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *MDeskInfoToc) GetBetArea() []*PDeskBetHongHei_2Area {
	if x != nil {
		return x.BetArea
	}
	return nil
}

func (x *MDeskInfoToc) GetMyBet() []*PDeskMyBetHongHei_2Info {
	if x != nil {
		return x.MyBet
	}
	return nil
}

// 当前桌子的输赢记录
type PDeskInfoHongHei_2History struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Set *int32 `protobuf:"varint,1,opt,name=set,proto3,oneof" json:"set,omitempty"` // 第几局
	Win *int32 `protobuf:"varint,2,opt,name=win,proto3,oneof" json:"win,omitempty"` // 哪一方赢了
	Px  *int32 `protobuf:"varint,3,opt,name=px,proto3,oneof" json:"px,omitempty"`   // 牌型
}

func (x *PDeskInfoHongHei_2History) Reset() {
	*x = PDeskInfoHongHei_2History{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PDeskInfoHongHei_2History) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDeskInfoHongHei_2History) ProtoMessage() {}

func (x *PDeskInfoHongHei_2History) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDeskInfoHongHei_2History.ProtoReflect.Descriptor instead.
func (*PDeskInfoHongHei_2History) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{10}
}

func (x *PDeskInfoHongHei_2History) GetSet() int32 {
	if x != nil && x.Set != nil {
		return *x.Set
	}
	return 0
}

func (x *PDeskInfoHongHei_2History) GetWin() int32 {
	if x != nil && x.Win != nil {
		return *x.Win
	}
	return 0
}

func (x *PDeskInfoHongHei_2History) GetPx() int32 {
	if x != nil && x.Px != nil {
		return *x.Px
	}
	return 0
}

// 投注区域信息
type PDeskBetHongHei_2Area struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area    *int64                    `protobuf:"varint,1,opt,name=area,proto3,oneof" json:"area,omitempty"`                      // 区域
	AreaBet *int64                    `protobuf:"varint,2,opt,name=area_bet,json=areaBet,proto3,oneof" json:"area_bet,omitempty"` // 下注区域的金额
	Ood     []*PDeskOodLuckyHongHei_2 `protobuf:"bytes,3,rep,name=ood,proto3" json:"ood,omitempty"`                               // 赔率
}

func (x *PDeskBetHongHei_2Area) Reset() {
	*x = PDeskBetHongHei_2Area{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PDeskBetHongHei_2Area) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDeskBetHongHei_2Area) ProtoMessage() {}

func (x *PDeskBetHongHei_2Area) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDeskBetHongHei_2Area.ProtoReflect.Descriptor instead.
func (*PDeskBetHongHei_2Area) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{11}
}

func (x *PDeskBetHongHei_2Area) GetArea() int64 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *PDeskBetHongHei_2Area) GetAreaBet() int64 {
	if x != nil && x.AreaBet != nil {
		return *x.AreaBet
	}
	return 0
}

func (x *PDeskBetHongHei_2Area) GetOod() []*PDeskOodLuckyHongHei_2 {
	if x != nil {
		return x.Ood
	}
	return nil
}

// 幸运一击赔率
type PDeskOodLuckyHongHei_2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Px  *int32   `protobuf:"varint,1,opt,name=px,proto3,oneof" json:"px,omitempty"`    // 牌型
	Ood *float32 `protobuf:"fixed32,2,opt,name=ood,proto3,oneof" json:"ood,omitempty"` // 赔率
}

func (x *PDeskOodLuckyHongHei_2) Reset() {
	*x = PDeskOodLuckyHongHei_2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PDeskOodLuckyHongHei_2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDeskOodLuckyHongHei_2) ProtoMessage() {}

func (x *PDeskOodLuckyHongHei_2) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDeskOodLuckyHongHei_2.ProtoReflect.Descriptor instead.
func (*PDeskOodLuckyHongHei_2) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{12}
}

func (x *PDeskOodLuckyHongHei_2) GetPx() int32 {
	if x != nil && x.Px != nil {
		return *x.Px
	}
	return 0
}

func (x *PDeskOodLuckyHongHei_2) GetOod() float32 {
	if x != nil && x.Ood != nil {
		return *x.Ood
	}
	return 0
}

// 当前牌桌我的投注信息
type PDeskMyBetHongHei_2Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area  *int32 `protobuf:"varint,1,opt,name=area,proto3,oneof" json:"area,omitempty"`                // 投注区域
	MyBet *int64 `protobuf:"varint,2,opt,name=my_bet,json=myBet,proto3,oneof" json:"my_bet,omitempty"` // 我的投注
}

func (x *PDeskMyBetHongHei_2Info) Reset() {
	*x = PDeskMyBetHongHei_2Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PDeskMyBetHongHei_2Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDeskMyBetHongHei_2Info) ProtoMessage() {}

func (x *PDeskMyBetHongHei_2Info) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDeskMyBetHongHei_2Info.ProtoReflect.Descriptor instead.
func (*PDeskMyBetHongHei_2Info) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{13}
}

func (x *PDeskMyBetHongHei_2Info) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *PDeskMyBetHongHei_2Info) GetMyBet() int64 {
	if x != nil && x.MyBet != nil {
		return *x.MyBet
	}
	return 0
}

// 玩家投注 C--> S
type MPlayerBetHongHei_2Tos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SId  *string `protobuf:"bytes,1,opt,name=s_id,json=sId,proto3,oneof" json:"s_id,omitempty"` // 玩家id
	Area *int32  `protobuf:"varint,2,opt,name=area,proto3,oneof" json:"area,omitempty"`         // 投注区域
	Nums *int64  `protobuf:"varint,3,opt,name=nums,proto3,oneof" json:"nums,omitempty"`         // 投注数量
}

func (x *MPlayerBetHongHei_2Tos) Reset() {
	*x = MPlayerBetHongHei_2Tos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MPlayerBetHongHei_2Tos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MPlayerBetHongHei_2Tos) ProtoMessage() {}

func (x *MPlayerBetHongHei_2Tos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MPlayerBetHongHei_2Tos.ProtoReflect.Descriptor instead.
func (*MPlayerBetHongHei_2Tos) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{14}
}

func (x *MPlayerBetHongHei_2Tos) GetSId() string {
	if x != nil && x.SId != nil {
		return *x.SId
	}
	return ""
}

func (x *MPlayerBetHongHei_2Tos) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *MPlayerBetHongHei_2Tos) GetNums() int64 {
	if x != nil && x.Nums != nil {
		return *x.Nums
	}
	return 0
}

// 返回玩家下注信息
type MPlayerBetHongHei_2Toc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyChip    *int64                 `protobuf:"varint,1,opt,name=my_chip,json=myChip,proto3,oneof" json:"my_chip,omitempty"`    // 我自己剩下的筹码
	AreaNow   *int32                 `protobuf:"varint,2,opt,name=area_now,json=areaNow,proto3,oneof" json:"area_now,omitempty"` // 当次下注区域
	ChipNow   *int64                 `protobuf:"varint,3,opt,name=chip_now,json=chipNow,proto3,oneof" json:"chip_now,omitempty"` // 当次下注数量
	PlayerBet []*PPlayerBetHongHei_2 `protobuf:"bytes,4,rep,name=player_bet,json=playerBet,proto3" json:"player_bet,omitempty"`  // 玩家下注总额
}

func (x *MPlayerBetHongHei_2Toc) Reset() {
	*x = MPlayerBetHongHei_2Toc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MPlayerBetHongHei_2Toc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MPlayerBetHongHei_2Toc) ProtoMessage() {}

func (x *MPlayerBetHongHei_2Toc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MPlayerBetHongHei_2Toc.ProtoReflect.Descriptor instead.
func (*MPlayerBetHongHei_2Toc) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{15}
}

func (x *MPlayerBetHongHei_2Toc) GetMyChip() int64 {
	if x != nil && x.MyChip != nil {
		return *x.MyChip
	}
	return 0
}

func (x *MPlayerBetHongHei_2Toc) GetAreaNow() int32 {
	if x != nil && x.AreaNow != nil {
		return *x.AreaNow
	}
	return 0
}

func (x *MPlayerBetHongHei_2Toc) GetChipNow() int64 {
	if x != nil && x.ChipNow != nil {
		return *x.ChipNow
	}
	return 0
}

func (x *MPlayerBetHongHei_2Toc) GetPlayerBet() []*PPlayerBetHongHei_2 {
	if x != nil {
		return x.PlayerBet
	}
	return nil
}

type PPlayerBetHongHei_2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area      *int32 `protobuf:"varint,1,opt,name=area,proto3,oneof" json:"area,omitempty"`                              // 下注区域
	MyAllChip *int64 `protobuf:"varint,2,opt,name=my_all_chip,json=myAllChip,proto3,oneof" json:"my_all_chip,omitempty"` // 该区域我自己的下注总额
}

func (x *PPlayerBetHongHei_2) Reset() {
	*x = PPlayerBetHongHei_2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PPlayerBetHongHei_2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PPlayerBetHongHei_2) ProtoMessage() {}

func (x *PPlayerBetHongHei_2) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PPlayerBetHongHei_2.ProtoReflect.Descriptor instead.
func (*PPlayerBetHongHei_2) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{16}
}

func (x *PPlayerBetHongHei_2) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *PPlayerBetHongHei_2) GetMyAllChip() int64 {
	if x != nil && x.MyAllChip != nil {
		return *x.MyAllChip
	}
	return 0
}

// 游戏结果 S--> C
type MGameResultHongHei_2Toc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Win            *int32                   `protobuf:"varint,1,opt,name=win,proto3,oneof" json:"win,omitempty"`                                      // 胜利方
	RedPx          *int32                   `protobuf:"varint,2,opt,name=red_px,json=redPx,proto3,oneof" json:"red_px,omitempty"`                     // 红方牌型
	RedCards       []int32                  `protobuf:"varint,3,rep,packed,name=red_cards,json=redCards,proto3" json:"red_cards,omitempty"`           // 红方牌组
	BlackPx        *int32                   `protobuf:"varint,4,opt,name=black_px,json=blackPx,proto3,oneof" json:"black_px,omitempty"`               // 黑方牌型
	BlackCards     []int32                  `protobuf:"varint,5,rep,packed,name=black_cards,json=blackCards,proto3" json:"black_cards,omitempty"`     // 黑方牌组
	SettlementInfo []*PPlayerSettlementInfo `protobuf:"bytes,6,rep,name=settlement_info,json=settlementInfo,proto3" json:"settlement_info,omitempty"` // 结算信息
}

func (x *MGameResultHongHei_2Toc) Reset() {
	*x = MGameResultHongHei_2Toc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MGameResultHongHei_2Toc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MGameResultHongHei_2Toc) ProtoMessage() {}

func (x *MGameResultHongHei_2Toc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MGameResultHongHei_2Toc.ProtoReflect.Descriptor instead.
func (*MGameResultHongHei_2Toc) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{17}
}

func (x *MGameResultHongHei_2Toc) GetWin() int32 {
	if x != nil && x.Win != nil {
		return *x.Win
	}
	return 0
}

func (x *MGameResultHongHei_2Toc) GetRedPx() int32 {
	if x != nil && x.RedPx != nil {
		return *x.RedPx
	}
	return 0
}

func (x *MGameResultHongHei_2Toc) GetRedCards() []int32 {
	if x != nil {
		return x.RedCards
	}
	return nil
}

func (x *MGameResultHongHei_2Toc) GetBlackPx() int32 {
	if x != nil && x.BlackPx != nil {
		return *x.BlackPx
	}
	return 0
}

func (x *MGameResultHongHei_2Toc) GetBlackCards() []int32 {
	if x != nil {
		return x.BlackCards
	}
	return nil
}

func (x *MGameResultHongHei_2Toc) GetSettlementInfo() []*PPlayerSettlementInfo {
	if x != nil {
		return x.SettlementInfo
	}
	return nil
}

type PPlayerSettlementInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SId        *string     `protobuf:"bytes,1,opt,name=s_id,json=sId,proto3,oneof" json:"s_id,omitempty"`                       // 玩家id
	Win        *bool       `protobuf:"varint,2,opt,name=win,proto3,oneof" json:"win,omitempty"`                                 // 输或者赢
	ChangeGold *int64      `protobuf:"varint,3,opt,name=change_gold,json=changeGold,proto3,oneof" json:"change_gold,omitempty"` // 总输赢
	BetInfo    []*PBetInfo `protobuf:"bytes,4,rep,name=bet_info,json=betInfo,proto3" json:"bet_info,omitempty"`                 // 每个玩家的投注信息
}

func (x *PPlayerSettlementInfo) Reset() {
	*x = PPlayerSettlementInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PPlayerSettlementInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PPlayerSettlementInfo) ProtoMessage() {}

func (x *PPlayerSettlementInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PPlayerSettlementInfo.ProtoReflect.Descriptor instead.
func (*PPlayerSettlementInfo) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{18}
}

func (x *PPlayerSettlementInfo) GetSId() string {
	if x != nil && x.SId != nil {
		return *x.SId
	}
	return ""
}

func (x *PPlayerSettlementInfo) GetWin() bool {
	if x != nil && x.Win != nil {
		return *x.Win
	}
	return false
}

func (x *PPlayerSettlementInfo) GetChangeGold() int64 {
	if x != nil && x.ChangeGold != nil {
		return *x.ChangeGold
	}
	return 0
}

func (x *PPlayerSettlementInfo) GetBetInfo() []*PBetInfo {
	if x != nil {
		return x.BetInfo
	}
	return nil
}

type PBetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetArea *int32 `protobuf:"varint,1,opt,name=bet_area,json=betArea,proto3,oneof" json:"bet_area,omitempty"` // 我的投注区域
	Nums    *int64 `protobuf:"varint,2,opt,name=nums,proto3,oneof" json:"nums,omitempty"`                      // 数量
}

func (x *PBetInfo) Reset() {
	*x = PBetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBetInfo) ProtoMessage() {}

func (x *PBetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBetInfo.ProtoReflect.Descriptor instead.
func (*PBetInfo) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{19}
}

func (x *PBetInfo) GetBetArea() int32 {
	if x != nil && x.BetArea != nil {
		return *x.BetArea
	}
	return 0
}

func (x *PBetInfo) GetNums() int64 {
	if x != nil && x.Nums != nil {
		return *x.Nums
	}
	return 0
}

// 玩家退出桌子
type MPlayerOutHongHei_2Tos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SId *string `protobuf:"bytes,1,opt,name=s_id,json=sId,proto3,oneof" json:"s_id,omitempty"` // 玩家id
}

func (x *MPlayerOutHongHei_2Tos) Reset() {
	*x = MPlayerOutHongHei_2Tos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MPlayerOutHongHei_2Tos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MPlayerOutHongHei_2Tos) ProtoMessage() {}

func (x *MPlayerOutHongHei_2Tos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MPlayerOutHongHei_2Tos.ProtoReflect.Descriptor instead.
func (*MPlayerOutHongHei_2Tos) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{20}
}

func (x *MPlayerOutHongHei_2Tos) GetSId() string {
	if x != nil && x.SId != nil {
		return *x.SId
	}
	return ""
}

// 玩家请求游戏记录
type MPlayerRecordHongHei_2Tos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SId  *string `protobuf:"bytes,1,opt,name=s_id,json=sId,proto3,oneof" json:"s_id,omitempty"` // 玩家id
	Nums *int32  `protobuf:"varint,2,opt,name=nums,proto3,oneof" json:"nums,omitempty"`         // 请求的数量
}

func (x *MPlayerRecordHongHei_2Tos) Reset() {
	*x = MPlayerRecordHongHei_2Tos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MPlayerRecordHongHei_2Tos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MPlayerRecordHongHei_2Tos) ProtoMessage() {}

func (x *MPlayerRecordHongHei_2Tos) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MPlayerRecordHongHei_2Tos.ProtoReflect.Descriptor instead.
func (*MPlayerRecordHongHei_2Tos) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{21}
}

func (x *MPlayerRecordHongHei_2Tos) GetSId() string {
	if x != nil && x.SId != nil {
		return *x.SId
	}
	return ""
}

func (x *MPlayerRecordHongHei_2Tos) GetNums() int32 {
	if x != nil && x.Nums != nil {
		return *x.Nums
	}
	return 0
}

// 服务器回游戏记录
type MPlayerRecordResHongHei_2Toc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record []*PPlayerRecord `protobuf:"bytes,1,rep,name=record,proto3" json:"record,omitempty"`
}

func (x *MPlayerRecordResHongHei_2Toc) Reset() {
	*x = MPlayerRecordResHongHei_2Toc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MPlayerRecordResHongHei_2Toc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MPlayerRecordResHongHei_2Toc) ProtoMessage() {}

func (x *MPlayerRecordResHongHei_2Toc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MPlayerRecordResHongHei_2Toc.ProtoReflect.Descriptor instead.
func (*MPlayerRecordResHongHei_2Toc) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{22}
}

func (x *MPlayerRecordResHongHei_2Toc) GetRecord() []*PPlayerRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

type PPlayerRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Set     *int32 `protobuf:"varint,1,opt,name=set,proto3,oneof" json:"set,omitempty"`                        // 局数
	Nums    *int64 `protobuf:"varint,2,opt,name=nums,proto3,oneof" json:"nums,omitempty"`                      // 输赢数量
	EndTime *int64 `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"` // 结束时间
}

func (x *PPlayerRecord) Reset() {
	*x = PPlayerRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PPlayerRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PPlayerRecord) ProtoMessage() {}

func (x *PPlayerRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_game_2_hong_hei_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PPlayerRecord.ProtoReflect.Descriptor instead.
func (*PPlayerRecord) Descriptor() ([]byte, []int) {
	return file_proto_pb_game_2_hong_hei_proto_rawDescGZIP(), []int{23}
}

func (x *PPlayerRecord) GetSet() int32 {
	if x != nil && x.Set != nil {
		return *x.Set
	}
	return 0
}

func (x *PPlayerRecord) GetNums() int64 {
	if x != nil && x.Nums != nil {
		return *x.Nums
	}
	return 0
}

func (x *PPlayerRecord) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

var File_proto_pb_game_2_hong_hei_proto protoreflect.FileDescriptor

var file_proto_pb_game_2_hong_hei_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x32, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x87, 0x01, 0x0a, 0x17, 0x6d, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x32, 0x5f, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x07,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x72, 0x6f,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x02, 0x52, 0x04, 0x64, 0x65, 0x73, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72, 0x6f, 0x6f,
	0x6d, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x22, 0xc0, 0x01, 0x0a, 0x17, 0x6d,
	0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x32, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x63, 0x12, 0x1c, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x01, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x5f, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x72, 0x6f, 0x6f, 0x6d, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x22, 0xe6, 0x01,
	0x0a, 0x1a, 0x70, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65,
	0x69, 0x5f, 0x32, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x07,
	0x6d, 0x69, 0x6e, 0x5f, 0x62, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x06, 0x6d, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x6d, 0x61,
	0x78, 0x5f, 0x62, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x06, 0x6d,
	0x61, 0x78, 0x42, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x5f,
	0x62, 0x65, 0x74, 0x5f, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x02, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x42, 0x65, 0x74, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x27, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x65, 0x74, 0x5f, 0x6c, 0x75, 0x63,
	0x6b, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x42,
	0x65, 0x74, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d,
	0x69, 0x6e, 0x5f, 0x62, 0x65, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x62,
	0x65, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x62, 0x65, 0x74, 0x5f, 0x6c,
	0x75, 0x63, 0x6b, 0x79, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x65, 0x74,
	0x5f, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x22, 0x72, 0x0a, 0x21, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x6f, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x68, 0x6f, 0x6e,
	0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x74, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x04, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x1e, 0x6d,
	0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f, 0x68,
	0x65, 0x69, 0x5f, 0x32, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x6f, 0x63, 0x12, 0x16, 0x0a,
	0x04, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x2f, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f,
	0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x65, 0x73, 0x6b,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x22,
	0xbd, 0x01, 0x0a, 0x1a, 0x70, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x68,
	0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x0a, 0x07, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x06, 0x64, 0x65, 0x73, 0x6b, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x08,
	0x6e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x73,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x03, 0x73, 0x65, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x65, 0x74, 0x22,
	0xbe, 0x01, 0x0a, 0x18, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x63, 0x12, 0x1c, 0x0a, 0x07,
	0x64, 0x65, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x06, 0x64, 0x65, 0x73, 0x6b, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x04, 0x72, 0x62, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x5f, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x5f, 0x62, 0x65, 0x74, 0x52, 0x04, 0x72, 0x62, 0x65, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x64, 0x65, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0x51, 0x0a, 0x0b, 0x70, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x62, 0x65, 0x74, 0x12,
	0x17, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x04, 0x61, 0x72, 0x65, 0x61, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x75, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x75, 0x6d, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x21, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x74, 0x6f, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f,
	0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x74, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x04, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x06, 0x64, 0x65, 0x73, 0x6b, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x64, 0x65, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x22, 0xf5, 0x02, 0x0a, 0x0f, 0x6d, 0x5f, 0x64, 0x65,
	0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x6f, 0x63, 0x12, 0x16, 0x0a, 0x04, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x08,
	0x6e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x73,
	0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x03, 0x73, 0x65, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x39, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x36, 0x0a,
	0x08, 0x62, 0x65, 0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x62, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6e,
	0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x52, 0x07, 0x62, 0x65,
	0x74, 0x41, 0x72, 0x65, 0x61, 0x12, 0x35, 0x0a, 0x06, 0x6d, 0x79, 0x5f, 0x62, 0x65, 0x74, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x6d,
	0x79, 0x5f, 0x62, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6d, 0x79, 0x42, 0x65, 0x74, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x65, 0x74, 0x22,
	0x7a, 0x0a, 0x1e, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x68,
	0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x03, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x77, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x03, 0x77, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x13, 0x0a, 0x02, 0x70, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x02, 0x70,
	0x78, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x65, 0x74, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x77, 0x69, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x70, 0x78, 0x22, 0x9b, 0x01, 0x0a, 0x1a,
	0x70, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x62, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f,
	0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x12, 0x17, 0x0a, 0x04, 0x61, 0x72,
	0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x62, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x07, 0x61, 0x72, 0x65, 0x61, 0x42, 0x65, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x03, 0x6f, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x6f, 0x6f, 0x64, 0x5f, 0x6c, 0x75,
	0x63, 0x6b, 0x79, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x52, 0x03,
	0x6f, 0x6f, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x62, 0x65, 0x74, 0x22, 0x58, 0x0a, 0x1b, 0x70, 0x5f, 0x64,
	0x65, 0x73, 0x6b, 0x5f, 0x6f, 0x6f, 0x64, 0x5f, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x5f, 0x68, 0x6f,
	0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x12, 0x13, 0x0a, 0x02, 0x70, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x02, 0x70, 0x78, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a,
	0x03, 0x6f, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x03, 0x6f, 0x6f,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x70, 0x78, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x6f, 0x6f, 0x64, 0x22, 0x68, 0x0a, 0x1d, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x6d, 0x79,
	0x5f, 0x62, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a,
	0x06, 0x6d, 0x79, 0x5f, 0x62, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52,
	0x05, 0x6d, 0x79, 0x42, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x61, 0x72,
	0x65, 0x61, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x79, 0x5f, 0x62, 0x65, 0x74, 0x22, 0x82, 0x01,
	0x0a, 0x1b, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x65, 0x74, 0x5f, 0x68,
	0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x74, 0x6f, 0x73, 0x12, 0x16, 0x0a,
	0x04, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x04,
	0x6e, 0x75, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x5f, 0x69, 0x64,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x75,
	0x6d, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x1b, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x62, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x74,
	0x6f, 0x63, 0x12, 0x1c, 0x0a, 0x07, 0x6d, 0x79, 0x5f, 0x63, 0x68, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x79, 0x43, 0x68, 0x69, 0x70, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x01, 0x52, 0x07, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x6f, 0x77, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x70, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x02, 0x52, 0x07, 0x63, 0x68, 0x69, 0x70, 0x4e, 0x6f, 0x77, 0x88, 0x01, 0x01,
	0x12, 0x37, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x62, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x52, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x65, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x79,
	0x5f, 0x63, 0x68, 0x69, 0x70, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e,
	0x6f, 0x77, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x68, 0x69, 0x70, 0x5f, 0x6e, 0x6f, 0x77, 0x22,
	0x70, 0x0a, 0x17, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x65, 0x74, 0x5f,
	0x68, 0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x12, 0x17, 0x0a, 0x04, 0x61, 0x72,
	0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x6d, 0x79, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x68,
	0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x79, 0x41, 0x6c,
	0x6c, 0x43, 0x68, 0x69, 0x70, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x79, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x68, 0x69,
	0x70, 0x22, 0x93, 0x02, 0x0a, 0x1c, 0x6d, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x74,
	0x6f, 0x63, 0x12, 0x15, 0x0a, 0x03, 0x77, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x03, 0x77, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x72, 0x65, 0x64,
	0x5f, 0x70, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x72, 0x65, 0x64,
	0x50, 0x78, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x07, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x50, 0x78, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x77, 0x69, 0x6e, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x78, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x78, 0x22, 0xb8, 0x01, 0x0a, 0x18, 0x70, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x04, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03,
	0x77, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x03, 0x77, 0x69, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x67, 0x6f,
	0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x47, 0x6f, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x08, 0x62, 0x65, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x5f,
	0x62, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x62, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x77,
	0x69, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x67, 0x6f,
	0x6c, 0x64, 0x22, 0x5b, 0x0a, 0x0a, 0x70, 0x5f, 0x62, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x1e, 0x0a, 0x08, 0x62, 0x65, 0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x62, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01,
	0x52, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x65,
	0x74, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x75, 0x6d, 0x73, 0x22,
	0x3e, 0x0a, 0x1b, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6f, 0x75, 0x74, 0x5f,
	0x68, 0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x74, 0x6f, 0x73, 0x12, 0x16,
	0x0a, 0x04, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x5f, 0x69, 0x64, 0x22,
	0x63, 0x0a, 0x1e, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x74, 0x6f,
	0x73, 0x12, 0x16, 0x0a, 0x04, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x03, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x75, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6e, 0x75, 0x6d, 0x73, 0x22, 0x4d, 0x0a, 0x21, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x5f, 0x68, 0x6f, 0x6e, 0x67, 0x5f,
	0x68, 0x65, 0x69, 0x5f, 0x32, 0x5f, 0x74, 0x6f, 0x63, 0x12, 0x28, 0x0a, 0x06, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x22, 0x7f, 0x0a, 0x0f, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x03, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x04, 0x6e,
	0x75, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x65, 0x74, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6e, 0x75, 0x6d, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_pb_game_2_hong_hei_proto_rawDescOnce sync.Once
	file_proto_pb_game_2_hong_hei_proto_rawDescData = file_proto_pb_game_2_hong_hei_proto_rawDesc
)

func file_proto_pb_game_2_hong_hei_proto_rawDescGZIP() []byte {
	file_proto_pb_game_2_hong_hei_proto_rawDescOnce.Do(func() {
		file_proto_pb_game_2_hong_hei_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_pb_game_2_hong_hei_proto_rawDescData)
	})
	return file_proto_pb_game_2_hong_hei_proto_rawDescData
}

var file_proto_pb_game_2_hong_hei_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_proto_pb_game_2_hong_hei_proto_goTypes = []interface{}{
	(*MGame_2EnterGameTos)(nil),          // 0: m_game_2_enter_game_tos
	(*MGame_2EnterGameToc)(nil),          // 1: m_game_2_enter_game_toc
	(*PGameHongHei_2Sessions)(nil),       // 2: p_game_hong_hei_2_sessions
	(*MPlayerIntoGameHongHei_2Tos)(nil),  // 3: m_player_into_game_hong_hei_2_tos
	(*MAllDeskHongHei_2InfoToc)(nil),     // 4: m_all_desk_hong_hei_2_info_toc
	(*PAllDeskHongHei_2Info)(nil),        // 5: p_all_desk_hong_hei_2_info
	(*MDeskStatusChangeToc)(nil),         // 6: m_desk_status_change_toc
	(*PRobotBet)(nil),                    // 7: p_robot_bet
	(*MPlayerIntoDeskHongHei_2Tos)(nil),  // 8: m_player_into_desk_hong_hei_2_tos
	(*MDeskInfoToc)(nil),                 // 9: m_desk_info_toc
	(*PDeskInfoHongHei_2History)(nil),    // 10: p_desk_info_hong_hei_2_history
	(*PDeskBetHongHei_2Area)(nil),        // 11: p_desk_bet_hong_hei_2_area
	(*PDeskOodLuckyHongHei_2)(nil),       // 12: p_desk_ood_lucky_hong_hei_2
	(*PDeskMyBetHongHei_2Info)(nil),      // 13: p_desk_my_bet_hong_hei_2_info
	(*MPlayerBetHongHei_2Tos)(nil),       // 14: m_player_bet_hong_hei_2_tos
	(*MPlayerBetHongHei_2Toc)(nil),       // 15: m_player_bet_hong_hei_2_toc
	(*PPlayerBetHongHei_2)(nil),          // 16: p_player_bet_hong_hei_2
	(*MGameResultHongHei_2Toc)(nil),      // 17: m_game_result_hong_hei_2_toc
	(*PPlayerSettlementInfo)(nil),        // 18: p_player_settlement_info
	(*PBetInfo)(nil),                     // 19: p_bet_info
	(*MPlayerOutHongHei_2Tos)(nil),       // 20: m_player_out_hong_hei_2_tos
	(*MPlayerRecordHongHei_2Tos)(nil),    // 21: m_player_record_hong_hei_2_tos
	(*MPlayerRecordResHongHei_2Toc)(nil), // 22: m_player_recordRes_hong_hei_2_toc
	(*PPlayerRecord)(nil),                // 23: p_player_record
}
var file_proto_pb_game_2_hong_hei_proto_depIdxs = []int32{
	2,  // 0: m_game_2_enter_game_toc.sessions:type_name -> p_game_hong_hei_2_sessions
	5,  // 1: m_all_desk_hong_hei_2_info_toc.desk:type_name -> p_all_desk_hong_hei_2_info
	7,  // 2: m_desk_status_change_toc.rbet:type_name -> p_robot_bet
	10, // 3: m_desk_info_toc.history:type_name -> p_desk_info_hong_hei_2_history
	11, // 4: m_desk_info_toc.bet_area:type_name -> p_desk_bet_hong_hei_2_area
	13, // 5: m_desk_info_toc.my_bet:type_name -> p_desk_my_bet_hong_hei_2_info
	12, // 6: p_desk_bet_hong_hei_2_area.ood:type_name -> p_desk_ood_lucky_hong_hei_2
	16, // 7: m_player_bet_hong_hei_2_toc.player_bet:type_name -> p_player_bet_hong_hei_2
	18, // 8: m_game_result_hong_hei_2_toc.settlement_info:type_name -> p_player_settlement_info
	19, // 9: p_player_settlement_info.bet_info:type_name -> p_bet_info
	23, // 10: m_player_recordRes_hong_hei_2_toc.record:type_name -> p_player_record
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_pb_game_2_hong_hei_proto_init() }
func file_proto_pb_game_2_hong_hei_proto_init() {
	if File_proto_pb_game_2_hong_hei_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_pb_game_2_hong_hei_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MGame_2EnterGameTos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MGame_2EnterGameToc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PGameHongHei_2Sessions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MPlayerIntoGameHongHei_2Tos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MAllDeskHongHei_2InfoToc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PAllDeskHongHei_2Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MDeskStatusChangeToc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PRobotBet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MPlayerIntoDeskHongHei_2Tos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MDeskInfoToc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PDeskInfoHongHei_2History); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PDeskBetHongHei_2Area); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PDeskOodLuckyHongHei_2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PDeskMyBetHongHei_2Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MPlayerBetHongHei_2Tos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MPlayerBetHongHei_2Toc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PPlayerBetHongHei_2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MGameResultHongHei_2Toc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PPlayerSettlementInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MPlayerOutHongHei_2Tos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MPlayerRecordHongHei_2Tos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MPlayerRecordResHongHei_2Toc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_game_2_hong_hei_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PPlayerRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_proto_pb_game_2_hong_hei_proto_msgTypes[23].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_pb_game_2_hong_hei_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_pb_game_2_hong_hei_proto_goTypes,
		DependencyIndexes: file_proto_pb_game_2_hong_hei_proto_depIdxs,
		MessageInfos:      file_proto_pb_game_2_hong_hei_proto_msgTypes,
	}.Build()
	File_proto_pb_game_2_hong_hei_proto = out.File
	file_proto_pb_game_2_hong_hei_proto_rawDesc = nil
	file_proto_pb_game_2_hong_hei_proto_goTypes = nil
	file_proto_pb_game_2_hong_hei_proto_depIdxs = nil
}
